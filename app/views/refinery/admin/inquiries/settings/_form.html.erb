<%= form_for [refinery, :admin, @setting],
                      :url => (refinery.admin_inquiries_setting_path(@setting.id) if @setting.persisted?),
                      :remote => dialog? do |f| %>

  <%= render '/refinery/admin/error_messages', :object => @setting, :include_object_name => true %>

  <div class="field">
    <label class="stripped" for="setting_value">
      <%= @setting.title %>
    </label>
    <span class="preview">- (<%= @setting.name %>)</span>
   </div>
  <div class="field">
    <%= setting_field(f, t(@setting.name, :scope => 'refinery.admin.settings.form.help', :default => '')) %>
  </div>

  <% if current_refinery_user.has_role?(:superuser) %>
  <div class="field">
    <%= refinery_form_field f, :check_box, :restricted, :label => true, :help => t('restricted', :scope => 'refinery.admin.settings.form.help') -%>
    <%= f.label :restricted, t('yes_make_this_setting_restricted', :scope => 'refinery.admin.settings.form'), :class => 'stripped' %>
   </div>
  <% end %>

  <%= render '/refinery/admin/form_actions', :f => f,
             :continue_editing => false,
             :hide_cancel => false,
             :submit_button_title => t('.restart_may_be_in_order_html'),
             :delete_title => t('delete', :scope => 'refinery.admin.settings'),
             :delete_confirmation => t('message', :scope => 'refinery.admin.delete', :title => @setting.title),
             :hide_delete => (@setting.new_record? or !@setting.destroyable) %>
<% end -%>
